dplyr,
zoo,
data.table,
ggrepel,
ggthemes,
ggtext
)
# Set ODS code for my Trust
my_ods <- "RDY"
# Set ODS codes for comparator Trusts
comparator_1_ods <- "RBD"
comparator_2_ods <- "R0D"
comparator_3_ods <- "RD3"
comparator_4_ods <- "RDZ"
# set working directory, unique to your machine
setwd("c:/b/atp_stats")
# Set plot colours
colour_backgroundorgs <- "seagreen2"
colour_highexposurescore <- "firebrick2"
colour_mediumexposurescore <- "sienna2"
colour_lowexposurescore <- "royalblue3"
colour_my_trust <- "darkorchid4"
colour_comparator_1 <- "green4"
colour_comparator_2 <- "dodgerblue"
colour_comparator_3 <- "navy"
colour_comparator_4 <- "gray20"
# Import monthly data
atp_stats_long_monthly <- readRDS("atp_stats_long_monthbymonth_server.rds")
# Set the various data strings we'll need
current_month <- head(atp_stats_long_monthly$month, 1) # current month for label plotting
current_month_print <- format(current_month, "%B %Y") # current month for title print
first_month <- tail(atp_stats_long_monthly$month, 1) # first month for label plotting
# My Trust dataset
my_trust <- atp_stats_long_monthly %>%
filter(ods==my_ods)
# Comparator 1 dataset
comparator_1 <- atp_stats_long_monthly %>%
filter(ods==comparator_1_ods)
# Comparator 2 dataset
comparator_2 <- atp_stats_long_monthly %>%
filter(ods==comparator_2_ods)
# Comparator 3 dataset
comparator_3 <- atp_stats_long_monthly %>%
filter(ods==comparator_3_ods)
# Comparator 4 dataset
comparator_4 <- atp_stats_long_monthly %>%
filter(ods==comparator_4_ods)
# NHS Trust average dataset
averages <- atp_stats_long_monthly %>%
group_by(month) %>%
summarise(cyber_score_mean = mean(cyber_score_server, na.rm = TRUE))
# NHS Trust top quartile dataset
topquartile <- atp_stats_long_monthly %>%
group_by(month) %>%
summarise(top_quartile = quantile(cyber_score_server, probs = 0.25, na.rm = TRUE))
# Create latest score variables from these subsets to use in the data plot
latest_my_trust <- head(my_trust$cyber_score_server, 1)
latest_comparator1 <- head(comparator_1$cyber_score_server, 1)
latest_comparator2 <- head(comparator_2$cyber_score_server, 1)
latest_comparator3 <- head(comparator_3$cyber_score_server, 1)
latest_comparator4 <- head(comparator_4$cyber_score_server, 1)
# Left hand side labels dataset
labels_left_x <- c(first_month, first_month, first_month)
labels_left_y <- c(29, 69, 100)
labels_left_text <- c("Low exposure score", "Medium exposure score", "High exposure score")
labels_left_colour <- c(colour_lowexposurescore, colour_mediumexposurescore, colour_highexposurescore)
plot_labels_left <- data.table(labels_left_x = labels_left_x, labels_left_y = labels_left_y, labels_left_text = labels_left_text, labels_left_colour = labels_left_colour)
# Right hand side labels dataset
labels_right_x <- c(current_month, current_month, current_month, current_month, current_month)
labels_right_y <- c(latest_my_trust, latest_comparator1, latest_comparator2)#, latest_comparator3, latest_comparator4)
labels_right_text <- c(my_ods, comparator_1_ods, comparator_2_ods)#, comparator_3_ods, comparator_4_ods)
labels_right_colour <- c(colour_my_trust, colour_comparator_1, colour_comparator_2)#, colour_comparator_3, colour_comparator_4)
plot_labels_right <- data.table(labels_right_x = labels_right_x, labels_right_y = labels_right_y, labels_right_text = labels_right_text, labels_right_colour = labels_right_colour)
View(plot_labels_right)
View(atp_stats_long_monthly)
# stats_import.r
# Written by Andrew Harrison (andrew.harrison11@nhs.net) in a personal capacity
# for internal use within the NHS only
# CONFIRM THE COMMON VARIABLES BELOW ARE APPROPRIATE FOR YOUR ENVIRONMENT
# AND THE DATA YOU ARE WORKING WITH
# SET COMMON VARIABLES ----
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-02-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-02.xlsx"
# INSTALL PACKAGES ----
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# IMPORT DATA ----
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# MUNGE DATA ----
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Server Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Server Exposure Score"] <- "cyber_score_server"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score_server"))
# MERGE DATA ----
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth_server.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth_server.rds")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_england_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_england_server.r")
# SQUARE PLOTS ----
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_server_sq.r", chdir = T)
# stats_import.r
# Written by Andrew Harrison (andrew.harrison11@nhs.net) in a personal capacity
# for internal use within the NHS only
# CONFIRM THE COMMON VARIABLES BELOW ARE APPROPRIATE FOR YOUR ENVIRONMENT
# AND THE DATA YOU ARE WORKING WITH
# SET COMMON VARIABLES ----
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-03-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-03.xlsx"
# INSTALL PACKAGES ----
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# IMPORT DATA ----
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# MUNGE DATA ----
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Windows Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Windows Exposure Score"] <- "cyber_score"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score"))
# MERGE DATA ----
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth.rds")
# stats_import.r
# Written by Andrew Harrison (andrew.harrison11@nhs.net) in a personal capacity
# for internal use within the NHS only
# CONFIRM THE COMMON VARIABLES BELOW ARE APPROPRIATE FOR YOUR ENVIRONMENT
# AND THE DATA YOU ARE WORKING WITH
# SET COMMON VARIABLES ----
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-03-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-03.xlsx"
# INSTALL PACKAGES ----
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# IMPORT DATA ----
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# MUNGE DATA ----
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Server Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Server Exposure Score"] <- "cyber_score_server"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score_server"))
# MERGE DATA ----
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth_server.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth_server.rds")
setwd("c:/github/MDE-monthly-report-graphics/scripts")
# RECTANGULAR PLOTS ----
source("stats_england.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_england_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_89k.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_mentalhealthtr.r")
remove(list=ls())
# SQUARE PLOTS ----
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_sq.r", chdir = T)
remove(list=ls())
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-04-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-04.xlsx"
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Windows Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Windows Exposure Score"] <- "cyber_score"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score"))
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth.rds")
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-04-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-04.xlsx"
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Server Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Server Exposure Score"] <- "cyber_score_server"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score_server"))
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth_server.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth_server.rds")
# build_reports.R
# build all reporting
setwd("c:/github/MDE-monthly-report-graphics/scripts")
# RECTANGULAR PLOTS ----
source("stats_england.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_england_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_89k.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_mentalhealthtr.r")
remove(list=ls())
# SQUARE PLOTS ----
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_sq.r", chdir = T)
remove(list=ls())
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-05-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-05.xlsx"
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Windows Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Windows Exposure Score"] <- "cyber_score"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score"))
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth.rds")
# set working directory
setwd("c:/b/atp_stats")
# set the date for the first of the month in the spreadsheet you are importing
month_import <- "2024-05-01"
# set the path to the spreadsheet
excel_path <- "raw/2024-05.xlsx"
# Install the pacman package to call all the other packages
if (!require("pacman")) install.packages("pacman")
# Use pacman to install (if req) and load required packages
pacman::p_load(
readxl,
tidyr,
ggplot2,
dplyr,
zoo,
data.table
)
# Import raw data from Excel
atp_sheet_raw <- read_excel(excel_path, )
# Select only the three columns we need
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ODS Code", "Organisation Type", "Server Exposure Score"))
# Change column names
names(atp_sheet_raw)[names(atp_sheet_raw) == "ODS Code"] <- "ods"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Organisation Type"] <- "orgtype"
names(atp_sheet_raw)[names(atp_sheet_raw) == "Server Exposure Score"] <- "cyber_score_server"
# Filter for types of organisations we want
atp_sheet_raw <- atp_sheet_raw %>%
filter(orgtype=="NHS TRUST")
# Add a new column named 'month' and populate it with the value of month_import
atp_sheet_raw['month']= month_import
# Set 'month' as a date
atp_sheet_raw$month <- as.Date(atp_sheet_raw$month, format = "%Y-%m-%d")
# Rearrange columns so they are in the same order as our existing data
atp_sheet_raw <- subset(atp_sheet_raw, select = c("ods", "month", "cyber_score_server"))
# Import existing data
atp_stats_long_import <- readRDS("atp_stats_long_monthbymonth_server.rds")
# Merge the two datasets
atp_stats_long_monthly <- rbind(atp_sheet_raw, atp_stats_long_import)
# Save the resulting dataset back to the monthly file
saveRDS(atp_stats_long_monthly, file = "atp_stats_long_monthbymonth_server.rds")
# build_reports.R
# build all reporting
setwd("c:/github/MDE-monthly-report-graphics/scripts")
# RECTANGULAR PLOTS ----
source("stats_england.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_england_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_89k.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare_server.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_compare.r")
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("stats_mentalhealthtr.r")
remove(list=ls())
# SQUARE PLOTS ----
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_compare_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_server_sq.r", chdir = T)
remove(list=ls())
setwd("c:/github/MDE-monthly-report-graphics/scripts")
source("square_plots/stats_england_sq.r", chdir = T)
remove(list=ls())
